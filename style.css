/* 基本スタイルとカラースキーム */
:root {
    /* SF感を意識したカラーパレット */
    --primary-dark: #1A2C3E; /* 濃いネイビー/チャコール */
    --primary-light: #00BFFF; /* 明るいスカイブルー (アクセント) */
    --accent-orange: #FFD700; /* ゴールドっぽいイエロー (アクセント) */
    --background-light: #F0F5F9; /* ごく薄いライトブルーグレー */
    --card-background: #FFF;
    --text-color: #333;
    --light-grey-border: #CED4DA; /* 明るいグレー */
    --medium-grey: #6C757D; /* 中間グレー */
    --soft-shadow: 0 8px 25px rgb(0 0 0 / 15%); /* 影を強調 */
    --transition-speed: 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94); /* よりSF的なイージング */

    /* HPバーの色 (グラデーション用) */
    --hp-low: #dc3545; /* 赤 */
    --hp-medium: #ffc107; /* 黄 */
    --hp-high: #28a745; /* 緑 */
    --hp-pulse-color: rgb(220 53 69 / 60%); /* 低HP時の脈動色 */

    /* SF演出用追加カラー */
    --neon-glow: #00EFFF; /* ネオンブルー */
    --neon-glow-strong: #00BFFF; /* より強いネオンブルー */
    --glitch-color1: #F0F; /* マゼンタ */
    --glitch-color2: #0FF; /* シアン */
    --grid-line-color: rgb(0 191 255 / 8%); /* グリッド線の色 */
    --loading-spinner-color: #00BFFF;

    /* X (Twitter) Blue for share buttons */
    --twitter-blue: #1DA1F2;
    --twitter-blue-shadow: rgb(29 161 242 / 40%);
    --twitter-blue-hover-shadow: rgb(29 161 242 / 60%);

    /* URL Copy Button Color */
    --copy-url-button-bg: #6c757d; /* Bootstrap secondary color */
    --copy-url-button-border: #6c757d;
    --copy-url-button-hover-bg: #5a6268;
    --copy-url-button-shadow: rgb(108 117 125 / 40%);
    --copy-url-button-hover-shadow: rgb(108 117 125 / 60%);
    --copy-success-bg: var(--hp-high); /* Green for success */
    --copy-success-border: var(--hp-high);
    --copy-success-shadow: rgb(40 167 69 / 40%);
}

/* ----- 基本スタイル ----- */
body {
    font-family: 'Noto Sans JP', 'Helvetica Neue', Arial, sans-serif;
    line-height: 1.7; /* 読みやすく */
    color: var(--text-color);
    max-width: 1200px;
    margin: 0 auto;
    padding: 25px; /* パディングを増やす */
    background: linear-gradient(135deg, var(--primary-dark) 0%, #102030 100%); /* 暗めのSF背景 */
    -webkit-font-smoothing: antialiased;
    overflow-x: hidden; /* 横スクロール防止 */
    position: relative;
    min-height: 100vh; /* 最小高さを確保 */
    z-index: 1; /* グリッドやノイズの上にコンテンツを配置 */

    /* 背景アニメーションを継続 */
    background-size: 200% 200%;
    animation: background-shift 60s ease-in-out infinite alternate;
    will-change: background-position; /* will-changeを追加 */
}

@keyframes background-shift {
    0% {
        background-position: 0% 50%;
    }

    100% {
        background-position: 100% 50%;
    }
}

/* 背景の微細なグリッドパターンとノイズ */
body::before, body::after {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    pointer-events: none;
}

body::before { /* グリッド */
    background-image: linear-gradient(to right, var(--grid-line-color) 1px, transparent 1px), linear-gradient(to bottom, var(--grid-line-color) 1px, transparent 1px);
    background-size: 50px 50px;
    opacity: 0.2;
    animation: grid-pan 120s linear infinite;
    will-change: background-position; /* will-changeを追加 */
}

@keyframes grid-pan {
    from {
        background-position: 0 0;
    }

    to {
        background-position: 5000px 5000px;
    }

    /* 非常にゆっくり移動 */
}

body::after { /* ノイズオーバレイ */
    /* base64エンコードされたSVGノイズ */
    background-image: url('data:image/svg+xml,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 40 40%27%3E%3Cfilter id=%27h%27%3E%3CfeTurbulence type=%27fractalNoise%27 baseFrequency=%27.8 .8%27 numOctaves=%271%27 seed=%272%27/%3E%3C/filter%3E%3Crect width=%27100%25%27 height=%27100%25%27 fill=%27url(%23h)%27 opacity=%270.05%27/%3E%3C/svg%3E');
    background-size: 200px;
    opacity: 0.1;
}

h1 {
    font-family: Orbitron, sans-serif; /* SFフォント適用 */
    color: var(--card-background); /* 背景に合わせて白色に */
    text-align: center;
    margin-bottom: 40px;
    font-size: 3.2em; /* さらに大きく */
    font-weight: 700;
    letter-spacing: 3px; /* 文字間を広げる */
    text-shadow: 0 0 15px rgb(0 191 255 / 60%); /* 常にわずかに光る */
    position: relative;
    z-index: 10; /* 最前面に */
    display: inline-block; /* text-shadowアニメーションのため */
    padding: 5px 0;
}

/* ----- H1タイトル SF演出 (初期ロード時のみ) ----- */
.title-sf-effect {
    /* IMPROVEMENT 7: タイトルのグリッチエフェクト強化 */
    animation: neon-glow-initial 1.5s ease-in-out forwards,
               glitch-text-initial 2s linear forwards,
               subtle-glitch 15s infinite alternate;
    will-change: transform, text-shadow, color; /* will-changeを追加 */
}

/* IMPROVEMENT 7: subtle-glitch keyframes */
@keyframes subtle-glitch {
  0%, 100% { transform: translate(0); }
  97% { transform: translate(1px, -1px); }
  98% { transform: translate(-1px, 1px); }
  99% { transform: translate(0.5px, -0.5px); }
}


@keyframes neon-glow-initial {
    0% {
        text-shadow: 0 0 5px var(--neon-glow), 0 0 10px var(--neon-glow), 0 0 20px var(--neon-glow), 0 0 40px rgb(0 239 255 / 40%);
        color: var(--primary-light); /* 初期は強く発光 */
    }

    100% {
        text-shadow: 0 0 15px rgb(0 191 255 / 60%); /* 落ち着いた輝きに */
        color: var(--card-background);
    }
}

@keyframes glitch-text-initial {
    0% {
        transform: translate(0);
        text-shadow: none;
    }

    5% {
        transform: translate(-2px, 2px);
        text-shadow: 2px 0 0 var(--glitch-color1);
    }

    10% {
        transform: translate(2px, -2px);
        text-shadow: -2px 0 0 var(--glitch-color2);
    }

    15% {
        transform: translate(-1px, 1px);
        text-shadow: 1px 0 0 var(--glitch-color1);
    }

    20% {
        transform: translate(1px, -1px);
        text-shadow: -1px 0 0 var(--glitch-color2);
    }

    21% {
        transform: translate(0);
        text-shadow: none;
    }

    70% {
        transform: translate(0);
        text-shadow: none;
    }

    75% {
        transform: translate(3px, -3px);
        text-shadow: -3px 0 0 var(--glitch-color2);
    }

    80% {
        transform: translate(-3px, 3px);
        text-shadow: 3px 0 0 var(--glitch-color1);
    }

    85% {
        transform: translate(2px, -2px);
        text-shadow: -2px 0 0 var(--glitch-color2);
    }

    90% {
        transform: translate(-2px, 2px);
        text-shadow: 2px 0 0 var(--glitch-color1);
    }

    91% {
        transform: translate(0);
        text-shadow: none;
    }

    100% {
        transform: translate(0);
        text-shadow: none;
    }
}

/* ----- 使い方ガイド（旧description）のスタイル ----- */
.usage-guide-container {
    background-color: var(--card-background);
    padding: 30px;
    margin-bottom: 50px;
    border-radius: 12px;
    box-shadow: var(--soft-shadow);
    transition: transform var(--transition-speed), box-shadow var(--transition-speed);
    position: relative;
    overflow: hidden; /* 背景アニメーション用 */
    border: 1px solid rgb(0 191 255 / 20%);
    will-change: transform, box-shadow; /* will-changeを追加 */
}

    .usage-guide-container:hover {
        transform: translateY(-8px); /* ホバー時の浮遊感を強調 */
        box-shadow: 0 12px 35px rgb(0 0 0 / 25%);
        border-color: var(--primary-light);
    }

    .usage-guide-container h2 {
        color: var(--primary-dark);
        font-size: 2.2em;
        font-weight: 700;
        margin-top: 0;
        margin-bottom: 30px;
        text-align: center;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 15px;
        text-shadow: 1px 1px 5px rgb(0 0 0 / 15%);
        position: relative;
        z-index: 1;
    }

    .usage-guide-container .guide-intro {
        font-size: 1.15em;
        color: #555;
        margin-bottom: 35px;
        text-align: center;
        line-height: 1.8;
        position: relative;
        z-index: 1;
        max-width: 70ch;
        margin-left: auto;
        margin-right: auto;
    }

/* ----- アコーディオンのスタイル ----- */
.accordion {
    border: 1px solid var(--primary-light); /* SF感のあるボーダー */
    border-radius: 10px;
    overflow: hidden;
    background-color: #F8FCFF;
    box-shadow: inset 0 0 15px rgb(0 191 255 / 10%);
    will-change: opacity, visibility, backdrop-filter; /* will-changeを追加 */
}

.accordion-item {
    border-bottom: 1px solid rgb(0 191 255 / 10%);
}

    .accordion-item:last-child {
        border-bottom: none;
    }

.accordion-header {
    background-color: var(--background-light);
    color: var(--primary-dark);
    padding: 18px 25px; /* パディングを増やす */
    width: 100%;
    text-align: left;
    border: none;
    outline: none;
    cursor: crosshair; /* SFカーソル */
    display: flex;
    align-items: center;
    justify-content: space-between;
    font-size: 1.2em; /* さらに大きく */
    font-weight: 700;
    transition: all var(--transition-speed), transform 0.1s ease-out; /* IMPROVEMENT 10: :activeでtransformを使うのでallにし、transform専用の短いtransitionを追加 */
    box-sizing: border-box;
    position: relative;
    overflow: hidden;
    will-change: background-color, color, box-shadow, transform; /* will-changeを追加, transform追加 for active state */
}

    /* IMPROVEMENT 10: インタラクティブな要素のフィードバック強化 */
    .accordion-header:active {
      transform: scale(0.98);
    }

    .accordion-header::before { /* ホバー・アクティブ時の光るボーダー */
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        border-radius: 10px;
        box-shadow: 0 0 0 0 var(--neon-glow-strong);
        transition: box-shadow 0.3s ease-out;
        z-index: -1;
        will-change: box-shadow; /* will-changeを追加 */
    }

    .accordion-header:hover {
        background-color: #E6EEF4;
        color: var(--primary-light);
        box-shadow: inset 0 0 15px rgb(0 191 255 / 20%);
    }

        .accordion-header:hover::before {
            box-shadow: 0 0 15px 3px var(--neon-glow-strong);
        }

    .accordion-header.active {
        background-color: var(--primary-light);
        color: var(--card-background);
        box-shadow: inset 0 0 25px rgb(0 191 255 / 50%);
    }

        .accordion-header.active::before {
            box-shadow: 0 0 20px 5px var(--neon-glow-strong);
        }

    .accordion-header span {
        display: flex;
        align-items: center;
        gap: 15px;
    }

    .accordion-header i:first-child {
        font-size: 1.4em;
        color: var(--accent-orange);
        transition: color var(--transition-speed);
    }

    .accordion-header.active i:first-child {
        color: var(--card-background);
    }

.accordion-icon { /* 共用アイコンスタイル */
    font-size: 1.1em;
    transition: transform var(--transition-speed);
    will-change: transform; /* will-changeを追加 */
}

.accordion-header.active .accordion-icon {
    transform: rotate(180deg) scale(1.1); /* わずかに拡大 */
}

.accordion-content {
    background-color: var(--card-background);
    padding: 0 25px;
    max-height: 0;
    overflow: hidden;

    /* IMPROVEMENT 3: アコーディオンの開閉アニメーション改善 */
    transition: 
      max-height 0.6s cubic-bezier(0.34, 1.56, 0.64, 1),
      opacity 0.4s cubic-bezier(0.34, 1.56, 0.64, 1),
      transform 0.4s cubic-bezier(0.34, 1.56, 0.64, 1),
      padding 0.4s cubic-bezier(0.34, 1.56, 0.64, 1); /* paddingもイージング適用 */

    color: #555;
    font-size: 1.05em;
    opacity: 0;
    transform: scaleY(0.8); /* 初期状態で縮小 */
    transform-origin: top;
    will-change: max-height, padding, opacity, transform; /* will-changeを追加 */
}

    .accordion-content.show {
        /* IMPROVEMENT 3: アコーディオンの開閉アニメーション改善 */
        max-height: 1000px; /* 十分な高さに設定 (提案通り1000pxに) */
        padding: 25px;
        opacity: 1;
        transform: scaleY(1); /* 表示時に元のサイズに */
    }

    .accordion-content p {
        max-width: 70ch; /* 読みやすい行長に制限 */
        margin: 0 auto 12px; /* 中央揃えにして上下マージン */
        line-height: 1.9; /* 行の高さを少し広げて読みやすく */
        transform: scaleY(1.03);
        transform-origin: top center; /* スケール原点を設定 */
    }

        .accordion-content p:last-child {
            margin-bottom: 0;
        }

    .accordion-content .formula {
        background-color: #F0F8FF;
        border-left: 6px solid var(--accent-orange);
        padding: 15px 20px;
        margin: 20px auto; /* 中央揃えに */
        max-width: 650px; /* 計算式ブロックの最大幅も制限 */
        border-radius: 8px;
        font-size: 1.2em;
        font-weight: 700;
        color: var(--primary-dark);
        text-align: center;
        box-shadow: 0 4px 10px rgb(0 0 0 / 12%);
        font-family: Rajdhani, sans-serif; /* SFフォント適用 */
    }

    .accordion-content .tip {
        font-style: italic;
        color: var(--medium-grey);
        font-size: 0.98em;
        display: flex;
        align-items: flex-start;
        gap: 12px;
        margin-top: 25px;
        background-color: #FDFCDC;
        border-radius: 8px;
        padding: 12px 18px;
        border: 1px solid #FFECB3;
        box-shadow: 0 3px 8px rgb(0 0 0 / 10%);
        max-width: 70ch;
        margin-left: auto;
        margin-right: auto;
    }
    
    .accordion-content.total-hp-accordion-content::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 10px;
    }

    .accordion-content.total-hp-accordion-content::-webkit-scrollbar-thumb {
        background: var(--primary-light);
        border-radius: 10px;
    }

    .accordion-content.total-hp-accordion-content::-webkit-scrollbar-thumb:hover { background: #008DCC; }
    
    .accordion-content.total-hp-accordion-content p,
    .accordion-content.total-hp-accordion-content ul {
        margin-bottom: 8px; /* 各要素間のスペース */
        line-height: 1.6;
        color: var(--text-color);
        font-size: 0.95em;
        overflow-wrap: break-word; /* 非推奨のbreak-wordを置き換え */
    }

/* ----- 検索・フィルタリング・ソート ----- */
.controls-container {
    display: flex;
    flex-direction: column;
    margin-bottom: 50px;
}

.search-container {
    display: flex;
    align-items: center;
    margin-bottom: 20px;
}

#character-search {
    flex-grow: 1;
    padding: 12px 15px;
    border: 1px solid var(--primary-light);
    border-radius: 8px;
    font-size: 1.1em;
    outline: none;
    background-color: var(--card-background);
    color: var(--text-color);
    transition: all var(--transition-speed);
}

#character-search::placeholder {
    color: var(--medium-grey);
}

#character-search:focus {
    border-color: var(--primary-light);
    box-shadow: 0 0 0 3px rgb(0 191 255 / 40%);
}

/* 検索結果なしメッセージ */
.no-results-message {
    text-align: center;
    color: #E74C3C;
    font-size: 1.3em;
    padding: 30px;
    opacity: 0; /* 初期非表示 */
    font-family: Orbitron, sans-serif;
    text-shadow: 0 0 10px rgb(231 76 60 / 50%);
    will-change: transform, opacity, text-shadow; /* will-changeを追加 */
}

@keyframes glitch-display {
    0% {
        transform: translate(0);
        opacity: 0;
    }

    10% {
        transform: translate(-2px, 2px);
        text-shadow: 2px 0 0 var(--glitch-color1);
        opacity: 1;
    }

    20% {
        transform: translate(2px, -2px);
        text-shadow: -2px 0 0 var(--glitch-color2);
    }

    30% {
        transform: translate(-1px, 1px);
        text-shadow: 1px 0 0 var(--glitch-color1);
    }

    40% {
        transform: translate(1px, -1px);
        text-shadow: -1px 0 0 var(--glitch-color2);
        opacity: 1;
    }

    50% {
        transform: translate(0);
        text-shadow: none;
        opacity: 1;
    }

    100% {
        transform: translate(0);
        text-shadow: none;
        opacity: 1;
    }
}

.filter-container {
    display: flex;
    flex-direction: column;
    gap: 30px;
    align-items: flex-start;
}

.filter-group {
    display: flex;
    align-items: center;
    gap: 15px;
    flex-wrap: wrap;
    width: 100%;
    justify-content: flex-start;
}

.filter-label {
    font-weight: bold;
    white-space: nowrap;
    color: var(--card-background);
    font-size: 1.05em;
    display: flex;
    align-items: center;
    gap: 10px;
}

    .controls-container .filter-group .filter-label i {
        color: var(--accent-orange);
        font-size: 1.2em;
        animation: bounce-icon 1.5s ease-in-out infinite alternate;
        will-change: transform; /* will-changeを追加 */
    }

    .controls-container .filter-group .filter-label:nth-of-type(2) i {
        animation-delay: 0.15s; /* アイコンのバウンスに遅延 */
    }

@keyframes bounce-icon {
    0%, 100% {
        transform: translateY(0);
    }

    50% {
        transform: translateY(-5px);
    }
}

.filter-buttons {
    display: flex;
    gap: 12px;
    flex-wrap: wrap;
}

.filter-button {
    background-color: var(--light-grey-border);
    border: 2px solid var(--light-grey-border);
    padding: 12px 20px; /* パディングを増やす */
    border-radius: 30px; /* 角丸を大きく */
    cursor: crosshair; /* SFカーソル */
    transition: all var(--transition-speed);
    font-size: 1em;
    color: var(--text-color);
    white-space: nowrap;
    min-width: 80px; /* 最小幅を確保 */
    text-align: center;
    box-shadow: 0 4px 10px rgb(0 0 0 / 12%); /* 影を強調 */
    position: relative;
    overflow: hidden;
    will-change: transform, background-color, box-shadow, color; /* will-changeを追加 */
}

    .controls-container .filter-group .filter-buttons .filter-button i { /* 動的に追加されるアイコンのスタイル */
        color: var(--primary-light);
        font-size: 1.2em;
        transition: transform 0.3s ease;
        will-change: transform; /* will-changeを追加 */
    }

    .controls-container .filter-group .filter-buttons .filter-button.active i {
        transform: rotateY(180deg);
    }

    .filter-button::after { /* 波紋エフェクト */
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 5px;
        height: 5px;
        background: rgb(255 255 255 / 60%);
        border-radius: 50%;
        opacity: 0;
        transform: translate(-50%, -50%) scale(1);
        transition: transform 0.6s ease-out, opacity 0.6s ease-out;
        z-index: 1;
        will-change: transform, opacity; /* will-changeを追加 */
    }

    .filter-button:active::after {
        transform: translate(-50%, -50%) scale(20);
        opacity: 1;
        transition: 0s; /* クリック時に即時表示 */
    }

    .filter-button::before { /* 光沢アニメーション */
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgb(255 255 255 / 30%), transparent);
        transform: skewX(-20deg);
        transition: all 0.5s ease;
        z-index: 1;
        will-change: transform, left;
    }

    .filter-button:hover::before {
        left: 100%;
    }

    .filter-button.active {
        background-color: var(--primary-light);
        color: var(--card-background);
        box-shadow: 0 5px 15px rgb(0 191 255 / 50%); /* アクティブ時の影を強調 */
        border-color: var(--primary-light);
        font-weight: bold;
        background-image: linear-gradient(45deg, rgb(0 191 255 / 80%) 0%, rgb(0 150 200 / 80%) 100%);
        background-size: 200% 200%;
        animation: active-button-glow 4s ease-in-out infinite alternate;
        will-change: background-position, box-shadow; /* will-changeを追加 */
    }

@keyframes active-button-glow {
    0% {
        background-position: 0% 50%;
    }

    100% {
        background-position: 100% 50%;
    }
}

/* IMPROVEMENT 10: インタラクティブな要素のフィードバック強化 (filter-button:active の更新) */
.filter-button:active {
    transform: translateY(3px) scale(0.98);
    box-shadow: 0 2px 5px rgb(0 0 0 / 20%) inset;
}

.filter-button:hover:not(.active) {
    background-color: #E6EEF4;
    transform: translateY(-5px); /* 浮遊感を強調 */
    box-shadow: 0 6px 18px rgb(0 0 0 / 20%);
    border-color: var(--medium-grey);
}

.filter-button.active:hover {
    background-color: #008DCC;
    transform: translateY(-5px);
}


/* ----- キャラクターグリッドとカード ----- */
.character-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr)); /* さらに大きく */
    gap: 35px; /* 間隔を広げる */
    margin-top: 50px;
}

.character-card {
    background-color: var(--card-background);
    border-radius: 15px; /* 角丸を大きく */
    box-shadow: var(--soft-shadow);
    overflow: hidden; /* ::afterがはみ出ないように */
    display: flex;
    flex-direction: column;
    transition: transform var(--transition-speed), box-shadow var(--transition-speed), filter var(--transition-speed); /* filterのtransition追加 */
    position: relative;
    border: 2px solid rgb(0 191 255 / 10%);
    background-image: linear-gradient(135deg, rgb(255 255 255 / 95%), rgb(240 245 249 / 90%)); /* 薄いグラデーション */
    will-change: transform, box-shadow, opacity, filter; /* will-changeを追加, filter追加 */
}

    .character-card::before { /* ボーダーに沿って光るエフェクト */
        content: '';
        position: absolute;
        inset: -2px;
        border-radius: 15px;
        background: linear-gradient(45deg, var(--neon-glow-strong) 0%, transparent 50%, var(--neon-glow-strong) 100%);
        background-size: 400% 400%;
        z-index: -1;
        opacity: 0.2; /* 常時薄く発光 */
        animation: card-border-flow 8s linear infinite;
        will-change: background-position, opacity; /* will-changeを追加 */
    }

    .character-card:hover::before {
        opacity: 0.8; /* ホバーで強く発光 */
    }

@keyframes card-border-flow {
    0% {
        border-color: var(--primary-light);
        transform: rotate(0deg);
    }

    100% {
        border-color: var(--neon-glow);
        transform: rotate(360deg);
    }
}

/* IMPROVEMENT 1: カードホバー時の高級感あるエフェクト強化 */
.character-card:hover {
  transform: translateY(-15px) scale(1.02) rotateZ(1deg);
  box-shadow: 0 15px 40px rgb(0 0 0 / 30%);
  border-color: var(--primary-light);
  filter: drop-shadow(0 0 15px rgb(0 191 255 / 60%));
}

/* IMPROVEMENT 1: カードホバー時の光のストリーク効果 */
.character-card::after {
  content: '';
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    to right,
    var(--hp-low) 0%,
    var(--hp-medium) 50%,
    var(--hp-high) 100%
  ), 
  linear-gradient(
    90deg,
    rgb(255 255 255 / 0%) 0%,
    rgb(255 255 255 / 50%) 50%,
    rgb(255 255 255 / 0%) 100%
  );
  background-size: 100% 100%, 200% 100%;
  background-repeat: no-repeat;
  transform-origin: left;
  position: relative;
  overflow: hidden;
  border-radius: 6px;
}

.hp-bar-fill::after { /* 光沢アニメーション */
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 50%;
    height: 100%;
    background: rgb(255 255 255 / 30%);
    transform: skewX(-20deg);
    animation: hp-shine 3s infinite;
    will-change: transform, left;
    z-index: 1; /* 手前に表示 */
}

.hp-bar-fill::before { /* 角丸の強調 */
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 6px;
    box-shadow: inset 0 0 8px rgb(0 0 0 / 20%); /* 内側の影 */
    z-index: 2; /* 最前面に */
    pointer-events: none;
}

.character-header {
    background-color: var(--primary-dark);
    color: var(--card-background);
    padding: 18px 30px; /* パディングを増やす */
    font-weight: 700;
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid rgb(255 255 255 / 20%);
    font-size: 1.2em;
    font-family: Rajdhani, sans-serif; /* SFフォント適用 */
    position: relative; /* z-indexを有効にするため */
    z-index: 1; /* ::after より手前に来るように */
}

.character-cost {
    background-color: var(--accent-orange);
    color: var(--primary-dark);
    padding: 6px 15px;
    border-radius: 20px;
    font-size: 0.95em;
    font-weight: 700;
    box-shadow: inset 0 0 8px rgb(255 215 0 / 40%);
}

.character-body {
    padding: 30px; /* パディングを増やす */
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    position: relative; /* z-indexを有効にするため */
    z-index: 1; /* ::after より手前に来るように */
}

.character-image {
    width: 120px; /* さらに大きく */
    height: 120px;
    background-color: #F0F5F9;
    border-radius: 50%;
    margin: 0 auto 30px;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 60px;
    color: #7F8C8D;
    font-weight: 700;
    border: 4px solid var(--primary-light); /* ボーダーを太く */
    box-shadow: 0 0 0 4px rgb(0 191 255 / 30%), inset 0 0 12px rgb(0 0 0 / 18%);
    overflow: hidden;
    transition: all var(--transition-speed);
    will-change: transform, box-shadow; /* will-changeを追加 */
}

    .character-image:hover {
        transform: scale(1.1) rotateZ(5deg); /* より強調された拡大と回転 */
        box-shadow: 0 0 0 6px rgb(0 191 255 / 60%), inset 0 0 15px rgb(0 0 0 / 25%);
    }

    .character-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 50%;
        display: block; /* default, overridden by JS if image fails/not present */
    }

    .character-image span.initial {
        width: 100%;
        height: 100%;
        display: flex; /* Initially flex to show, JS will hide if img loads */
        justify-content: center;
        align-items: center;
        font-size: 60px;
        color: #7F8C8D;
        font-weight: 700;
        font-family: Orbitron, sans-serif;
    }

.character-stats {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 15px;
    font-size: 1.1em;
    padding: 10px 0;
    border-bottom: 1px solid var(--light-grey-border);
    font-weight: 500;
}

.character-hp {
    font-family: Rajdhani, sans-serif; /* SFフォント適用 */
    font-weight: 700;
    color: #E74C3C;
    font-size: 1.3em; /* さらに大きく */
    cursor: crosshair; /* SFカーソル */
    transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    position: relative;
    overflow: hidden;
    text-shadow: 0 0 5px rgb(231 76 60 / 30%);
    will-change: color, text-shadow, transform; /* will-changeを追加 */
}

    .character-hp:hover {
        color: var(--primary-light);
        text-shadow: 0 0 12px rgb(0 191 255 / 70%); /* ホバー時のグロー */
    }

    .character-hp:active {
        transform: translateY(2px) scale(0.96);
        color: #C0392B;
    }

    .character-hp.animating {
        animation: hp-number-pop 0.8s ease-out forwards;
        will-change: transform;
    }

@keyframes hp-number-pop {
    0% {
        transform: scale(1) translateY(0);
        opacity: 1;
    }

    50% {
        transform: scale(1.2) translateY(-10px);
        opacity: 0.8;
    }

    100% {
        transform: scale(1) translateY(0);
        opacity: 1;
    }
}


/* ----- HPバーのスタイル ----- */
.hp-bar-container {
    width: 100%;
    height: 12px; /* さらに太く */
    background-color: #E0E0E0;
    border-radius: 6px;
    overflow: hidden;
    margin-bottom: 5px;
    box-shadow: inset 0 2px 6px rgb(0 0 0 / 20%);
    position: relative;
    border: 1px solid rgb(0 0 0 / 10%);
}

/* IMPROVEMENT 2: HPバーのグラデーションと光沢効果の強化 */
.hp-bar-fill {
    height: 100%;
    background: linear-gradient(
      to right,
      var(--hp-low) 0%,
      var(--hp-medium) 50%,
      var(--hp-high) 100%
    ), 
    linear-gradient(
      90deg,
      rgb(255 255 255 / 0%) 0%,
      rgb(255 255 255 / 50%) 50%,
      rgb(255 255 255 / 0%) 100%
    );
    background-size: 100% 100%, 200% 100%;
    background-repeat: no-repeat;
    transform-origin: left;
    position: relative;
    overflow: hidden;
    border-radius: 6px;
    animation: hp-shine 2.5s linear infinite; /* アニメーション名変更 */
    will-change: transform, background-position;
}

/* IMPROVEMENT 2: @keyframes hp-shine (既存のhpShineBackgroundを置き換え) */
@keyframes hp-shine {
  0% { background-position: -200% 0; }
  100% { background-position: 200% 0; }
}

.hp-bar-low-pulse {
    animation: hp-pulse 1s infinite alternate;
}

@keyframes hp-pulse {
    0% { box-shadow: 0 0 5px rgb(220 53 69 / 50%); }
    50% { box-shadow: 0 0 15px rgb(220 53 69 / 80%); }
    100% { box-shadow: 0 0 5px rgb(220 53 69 / 50%); }
}

/* ----- HP割合表示のスタイル (新しく追加) ----- */
.hp-percentage-display {
    text-align: center;
    font-family: Rajdhani, sans-serif;
    font-size: 1.2em; /* 割合の文字サイズ */
    font-weight: 700;
    color: var(--primary-light);
    margin-top: 5px;
    margin-bottom: 20px; /* 下のテーブルとの間隔 */
    text-shadow: 0 0 8px rgb(0 191 255 / 50%);
    position: relative;
    z-index: 2;
    pointer-events: none;
    opacity: 0; /* 初期非表示 */
    transition: opacity 0.3s ease; /* フェードイン/アウト */
}

    .hp-percentage-display.show {
        opacity: 1;
    }

/* ----- テーブルスタイル ----- */
.cost-table {
    width: 100%;
    border-collapse: separate; /* border-radiusのために */
    border-spacing: 0;
    margin-top: 20px;
    font-size: 1em;
    border-radius: 8px;
    overflow: hidden; /* 角丸対応 */
    box-shadow: 0 4px 12px rgb(0 0 0 / 10%);
}

    .cost-table th, .cost-table td {
        padding: 15px 8px;
        text-align: center;
        font-size: 0.95em;
    }

    .cost-table th {
        background-color: var(--primary-light);
        color: var(--card-background);
        font-weight: 700;
        border-bottom: 1px solid rgb(255 255 255 / 40%);
        white-space: nowrap;
        font-family: Rajdhani, sans-serif; /* SFフォント適用 */
    }

        .cost-table th:first-child {
            border-top-left-radius: 8px;
        }

        .cost-table th:last-child {
            border-top-right-radius: 8px;
        }

    .cost-table td {
        border-top: 1px solid var(--light-grey-border);
        color: var(--text-color);
        cursor: crosshair; /* SFカーソル */
        transition: background-color 0.3s ease, color 0.3s ease, box-shadow 0.3s ease, transform 0.3s ease;
        position: relative;
        background-color: var(--card-background);
        will-change: background-color, color, box-shadow, transform; /* will-changeを追加 */
    }

    .cost-table tr:nth-child(even) td {
        background-color: #F8FCFF;
    }

    .cost-table tr:hover td {
        background-color: #EBF7FF;
        color: var(--primary-dark);
        box-shadow: inset 0 0 10px rgb(0 191 255 / 30%); /* ホバー時の内側の影を強調 */
        transform: translateY(-2px); /* わずかに浮遊 */
    }

    .cost-table td.active-hp-display {
        background-color: #D3EEFF;
        font-weight: bold;
        color: var(--hp-low);
        box-shadow: inset 0 0 15px rgb(0 191 255 / 40%);
        border: 1px solid var(--primary-light);
        transform: translateY(0);
        animation: cell-flash 1.5s forwards ease-out;
    }

@keyframes cell-flash {
    0% {
        background-color: rgb(0 191 255 / 80%);
        box-shadow: 0 0 15px rgb(0 191 255 / 80%);
    }

    50% {
        background-color: rgb(0 191 255 / 60%);
        box-shadow: 0 0 10px rgb(0 191 255 / 50%);
    }

    100% {
        background-color: transparent;
        box-shadow: none;
    }
}

.cost-table tr:last-child td:first-child {
    border-bottom-left-radius: 8px;
}

.cost-table tr:last-child td:last-child {
    border-bottom-right-radius: 8px;
}

/* ----- ローディングインジケーターのスタイル ----- */
.loading-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgb(0 0 0 / 80%);
    backdrop-filter: blur(8px);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0s linear 0.3s;
}

    .loading-overlay.active {
        opacity: 1;
        visibility: visible;
    }

/* IMPROVEMENT 5: ローディングスピナーの未来感アップグレード */
.loading-spinner {
    width: 60px;
    height: 60px;
    border: 3px solid rgb(255 255 255 / 10%); 
    border-top: 3px solid var(--loading-spinner-color); 
    border-radius: 50%;
    animation: spin 1s linear infinite; 
    position: relative;
    box-shadow: 0 0 20px var(--loading-spinner-color); 
    will-change: transform, box-shadow;
}

/* IMPROVEMENT 5: ::before のスタイル変更 */
.loading-spinner::before {
    content: '';
    position: absolute;
    inset: -5px;
    border: 2px solid transparent;
    border-top: 2px solid var(--neon-glow);
    border-radius: 50%;
    animation: spin 1.5s linear infinite reverse; 
    opacity: 0.7;
}

/* IMPROVEMENT 5: ::after の新規追加 */
.loading-spinner::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 8px;
    height: 8px;
    background: var(--neon-glow);
    border-radius: 50%;
    box-shadow: 
      0 0 10px var(--neon-glow),
      0 0 20px var(--neon-glow);
}


@keyframes spin {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}

/* ----- フッターのスタイル ----- */
footer {
    text-align: center;
    margin-top: 80px; /* マージンを増やす */
    padding: 30px 0;
    border-top: 1px solid rgb(0 191 255 / 20%);
    color: var(--medium-grey);
    font-size: 0.95em; /* 少し大きく */
    letter-spacing: 1px;
    opacity: 0.7;
    background-color: rgb(0 0 0 / 10%); /* 半透明の背景 */
    position: relative;
    z-index: 1;
}

    footer a {
        color: var(--medium-grey);
        text-decoration: none;
        transition: color var(--transition-speed);
    }

        footer a:hover {
            color: var(--primary-light);
            text-shadow: 0 0 8px rgb(0 191 255 / 50%);
        }

/* ----- 新規追加: 再出撃シミュレーションセクション ----- */
.simulation-container {
    background-color: var(--card-background);
    padding: 30px;
    margin-bottom: 50px;
    border-radius: 12px;
    box-shadow: var(--soft-shadow);
    border: 1px solid rgb(0 191 255 / 20%);
    position: relative;
    overflow: hidden;
    will-change: transform, box-shadow;
    transition: transform var(--transition-speed), box-shadow var(--transition-speed);
}

    .simulation-container:hover {
        transform: translateY(-8px);
        box-shadow: 0 12px 35px rgb(0 0 0 / 25%);
        border-color: var(--primary-light);
    }

    .simulation-container h2 {
        color: var(--primary-dark);
        font-size: 2.2em;
        font-weight: 700;
        margin-top: 0;
        margin-bottom: 30px;
        text-align: center;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 15px;
        text-shadow: 1px 1px 5px rgb(0 0 0 / 15%);
        position: relative;
        z-index: 1;
    }

    .simulation-container .guide-intro {
        font-size: 1.15em;
        color: #555;
        margin-bottom: 35px;
        text-align: center;
        line-height: 1.8;
        max-width: 70ch;
        margin-left: auto;
        margin-right: auto;
    }

.character-select-group {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 30px;
    margin-bottom: 30px;
}

.select-wrapper {
    display: flex;
    flex-direction: column;
    gap: 10px;
    min-width: 250px;
}

    .select-wrapper label {
        font-weight: bold;
        color: var(--primary-dark);
        font-size: 1.1em;
        display: flex;
        align-items: center;
        gap: 10px;
    }

        .simulation-container.simulation-container.simulation-container .character-select-group .select-wrapper label i {
            color: var(--accent-orange);
            font-size: 1.2em;
        }

.select-dropdown {
    width: 100%;
    padding: 10px 15px;
    border: 1px solid var(--primary-light);
    border-radius: 8px;
    background-color: var(--card-background);
    color: var(--text-color);
    font-size: 1em;
    cursor: pointer;
    outline: none;
    transition: all 0.3s ease;
    appearance: none;
    background-image: url('data:image/svg+xml;utf8,<svg fill="%2300BFFF" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M7 10l5 5 5-5z"/><path d="M0 0h24v24H0z" fill="none"/></svg>');
    background-repeat: no-repeat;
    background-position: right 10px center;
    padding-right: 30px;
}

    .select-dropdown:focus {
        border-color: var(--primary-light);
        outline: none;
    color: white;
}

.ocr-modal-content .upload-area:hover {
    background: rgb(255 255 255 / 20%);
    border-color: #ffd700;
}

.ocr-modal-content .upload-area.dragover {
    background: rgb(255 215 0 / 20%);
    border-color: #ffd700;
}

.ocr-modal-content .upload-icon {
    width: 48px;
    height: 48px;
    margin: 0 auto 20px;
    stroke-width: 2;
}

.ocr-modal-content .upload-content p {
    margin-bottom: 10px;
    font-size: 1.1rem;
}

.ocr-modal-content .file-info {
    font-size: 0.9rem;
    opacity: 0.8;
}

/* Image section */
.ocr-modal-content .image-section {
    background: #1f2937; /* Darker background */
    border-radius: 15px;
    padding: 20px;
    margin-bottom: 30px;
    box-shadow: 0 10px 30px rgb(0 0 0 / 20%);
}

.ocr-modal-content .image-container {
    position: relative;
    margin-bottom: 20px;
    border-radius: 10px;
    overflow: hidden;
    background: #111827; /* Even darker for canvas parent */
}

.ocr-modal-content #image-canvas {
    border: 1px solid var(--light-grey-border);
    max-width: 100%;
    height: auto;
    display: block;
    margin: 10px auto;
}

.ocr-modal-content .region-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
}

.ocr-modal-content .region {
    position: absolute;
    border: 3px solid;
    border-radius: 8px;
    background: rgb(255 255 255 / 10%);
    backdrop-filter: blur(2px);
    pointer-events: auto;
    cursor: move;
}

.ocr-modal-content .resizer {
    position: absolute;
    width: 10px;
    height: 10px;
    background: transparent;
    border: 2px solid #fff;
    z-index: 10;
}

.ocr-modal-content .resizer.ne {
    top: -5px;
    right: -5px;
    cursor: nesw-resize;
}

.ocr-modal-content .resizer.nw {
    top: -5px;
    left: -5px;
    cursor: nwse-resize;
}

.ocr-modal-content .resizer.se {
    bottom: -5px;
    right: -5px;
    cursor: nwse-resize;
}

.ocr-modal-content .resizer.sw {
    bottom: -5px;
    left: -5px;
    cursor: nesw-resize;
}

.ocr-modal-content .durability-region {
    border: 2px solid var(--hp-high);
    background-color: rgb(40 167 69 / 20%);
}

.ocr-modal-content .awakening-region {
    border: 2px solid var(--primary-light);
    background-color: rgb(0 191 255 / 20%);
}

.ocr-modal-content .region-label {
    position: absolute;
    top: -25px;
    left: 0;
    background-color: rgb(0 0 0 / 70%);
    color: white;
    padding: 2px 8px;
    border-radius: 4px;
    font-size: 0.8em;
    pointer-events: none;
}

/* Controls */
.ocr-modal-content .controls {
    display: flex;
    gap: 15px;
    justify-content: center;
    flex-wrap: wrap;
}

.ocr-modal-content .btn {
    padding: 12px 24px;
    border: none;
    border-radius: 8px;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.ocr-modal-content .btn-primary {
    background: linear-gradient(45deg, #667eea, #764ba2);
    color: white;
}

.ocr-modal-content .btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgb(102 126 234 / 40%);
}

.ocr-modal-content .btn-secondary {
    background: #6c757d;
    color: white;
}

.ocr-modal-content .btn-secondary:hover {
    background: #5a6268;
    transform: translateY(-2px);
}

.ocr-modal-content .btn:disabled {
    background-color: #555;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
}

/* Results section */
.ocr-modal-content .results-section {
    background-color: var(--card-background);
    padding: 30px;
    border-radius: 12px;
    box-shadow: var(--soft-shadow);
    border: 1px solid rgb(0 191 255 / 20%);
    margin-top: 20px;
}

.ocr-modal-content .result-card h3 {
    margin-top: 0;
    margin-bottom: 20px;
    font-size: 1.4em;
    color: #cbd5e0;
    border-bottom: 2px solid #4a5568;
    padding-bottom: 10px;
}

.ocr-modal-content .result-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 15px;
}

.ocr-modal-content .result-item-header {
    border-bottom: 1px solid #4a5568;
    padding-bottom: 8px;
    margin-top: 15px;
}

.ocr-modal-content .result-item-header h4 {
    margin: 0;
    color: #e2e8f0;
    font-size: 1.2em;
}

.ocr-modal-content .result-item {
    display: flex;
    align-items: center;
    gap: 10px;
    background-color: #2d3748;
    padding: 15px;
    border-radius: 6px;
}

.ocr-modal-content .result-item label {
    font-weight: 600;
    color: #cbd5e0;
    min-width: 80px;
}

.ocr-modal-content .result-value {
    font-size: 1.5rem;
    font-weight: bold;
    color: #9f7aea;
    min-width: 60px;
}

.ocr-modal-content .confidence {
    font-size: 0.9rem;
    color: #9ca3af;
    margin-left: auto;
}

.ocr-modal-content .preview-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 10px;
    background-color: #2d3748;
    padding: 15px;
    border-radius: 6px;
    margin-top: 5px;
}

.ocr-modal-content .preview-container canvas {
    border: 1px solid #4a5568;
    background-color: #1a202c;
    border-radius: 4px;
}

.ocr-modal-content .preview-controls {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 15px;
    font-size: 0.9em;
    width: 100%;
}

.ocr-modal-content .preview-controls label {
    color: #a0aec0;
}

.ocr-modal-content .preview-controls input[type="range"] {
    width: 100px;
}

/* Progress section */
.ocr-modal-content .progress-section {
    margin-top: 20px;
    text-align: center;
}

.ocr-modal-content .progress-bar {
    width: 100%;
    height: 8px;
    background: #4a5568;
    border-radius: 4px;
    overflow: hidden;
    margin-bottom: 10px;
}

.ocr-modal-content .progress-fill {
    height: 100%;
    background: linear-gradient(45deg, #667eea, #764ba2);
    width: 0%;
    transition: width 0.3s ease;
}

.ocr-modal-content #progress-text {
    color: var(--primary-light);
    font-size: 1.1em;
    font-weight: bold;
    text-align: center;
    margin-top: 10px;
}


/* Animation classes */
.fade-in {
    animation: fade-in 0.8s forwards;
}

@keyframes fade-in {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

.pulse {
    animation: pulse 1s infinite alternate;
}

@keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
}

.upload-button {
    color: #fff !important; /* 文字色を白に */
    background-color: var(--primary-light) !important; /* 背景色をアクセントカラーに */
    border: none;
    padding: 10px 15px;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s, transform 0.2s;
}

.upload-button:hover {
    background-color: var(--neon-glow-strong) !important;
    transform: translateY(-2px);
}

.ocr-warning {
    font-size: 0.8em;
    color: var(--medium-grey);
    margin-top: 10px;
    text-align: center;
    max-width: 400px;
    margin-left: auto;
    margin-right: auto;
    line-height: 1.5;
}

.ocr-instructions-box {
    margin: 20px auto;
    padding: 15px;
    background-color: rgb(0 0 0 / 20%);
    border-left: 4px solid var(--primary-light);
    border-radius: 4px;
    max-width: 90%;
    color: var(--background-light);
}

.ocr-modal-content .ocr-instructions-box h4 {
    margin-top: 0;
    margin-bottom: 10px;
    font-size: 1.1em;
}

.ocr-instructions-box ol {
    margin: 0;
    padding-left: 20px;
    font-size: 0.9em;
    line-height: 1.6;
}

.ocr-instructions-box ol li {
    margin-bottom: 5px;
}

.ocr-instructions-box ol li:last-child {
    margin-bottom: 0;
}