/* ボタンコンポーネント */

/* テーマトグル */
.desktop-utility-bar {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    margin-bottom: 25px;
    flex-wrap: wrap;
}

.theme-toggle {
    display: inline-flex;
    gap: 8px;
    padding: 6px;
    border-radius: 999px;
    border: 1px solid var(--light-grey-border);
    background: rgba(255, 255, 255, 0.75);
    box-shadow: 0 10px 24px rgba(0, 0, 0, 0.12);
    backdrop-filter: blur(12px);
}

.theme-toggle__button {
    appearance: none;
    border: none;
    background: transparent;
    color: var(--text-secondary);
    font-weight: 600;
    letter-spacing: 0.05em;
    padding: 8px 18px;
    border-radius: 999px;
    cursor: pointer;
    transition: background-color 0.25s ease, color 0.25s ease, box-shadow 0.25s ease;
    min-width: 96px;
}

.theme-toggle__button:hover,
.theme-toggle__button:focus-visible {
    outline: none;
    background: rgba(0, 191, 255, 0.12);
    color: var(--primary-dark);
}

.theme-toggle__button[aria-pressed="true"] {
    background: linear-gradient(135deg, var(--primary-light), rgba(0, 191, 255, 0.75));
    color: var(--surface-contrast-color);
    box-shadow: 0 10px 22px rgba(0, 191, 255, 0.35);
}

.theme-toggle__button[aria-pressed="true"]:focus-visible {
    box-shadow: 0 0 0 3px rgba(0, 191, 255, 0.45);
}

body[data-theme="dark"] .desktop-utility-bar {
    justify-content: flex-end;
}

body[data-theme="dark"] .theme-toggle {
    background: rgba(15, 23, 42, 0.85);
    border-color: rgba(59, 130, 246, 0.45);
    box-shadow: 0 14px 32px rgba(2, 6, 23, 0.65);
}

body[data-theme="dark"] .theme-toggle__button {
    color: var(--text-secondary);
}

body[data-theme="dark"] .theme-toggle__button:hover,
body[data-theme="dark"] .theme-toggle__button:focus-visible {
    background: rgba(59, 130, 246, 0.2);
    color: var(--surface-contrast-color);
}

body[data-theme="dark"] .theme-toggle__button[aria-pressed="true"] {
    background: linear-gradient(135deg, rgba(59, 130, 246, 0.9), rgba(34, 211, 238, 0.85));
    box-shadow: 0 12px 26px rgba(59, 130, 246, 0.45);
}

@media (max-width: 768px) {
    .desktop-utility-bar {
        justify-content: center;
    }
}

/* フィルターボタン */
.filter-buttons {
    display: flex;
    gap: 12px;
    flex-wrap: wrap;
}

.filter-button {
    background-color: var(--light-grey-border);
    border: 2px solid var(--light-grey-border);
    padding: 12px 20px; /* パディングを増やす */
    border-radius: 30px; /* 角丸を大きく */
    cursor: crosshair; /* SFカーソル */
    transition: all var(--transition-speed);
    font-size: 1em;
    color: var(--text-color);
    white-space: nowrap;
    min-width: 80px; /* 最小幅を確保 */
    text-align: center;
    box-shadow: 0 4px 10px rgba(0,0,0,0.12); /* 影を強調 */
    position: relative;
    overflow: hidden;
    will-change: transform, background-color, box-shadow, color; /* will-changeを追加 */
}

.filter-button i { /* 動的に追加されるアイコンのスタイル */
    margin-left: 8px; /* テキストとアイコンの間隔 */
    font-size: 0.9em; /* テキストに合わせたサイズ */
    color: var(--text-color); /* デフォルト色 */
    transition: color 0.3s ease;
}

.filter-button.active i {
    color: var(--surface-contrast-color); /* アクティブ時の色 */
}

.filter-button::after { /* 波紋エフェクト */
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 5px;
    height: 5px;
    background: rgba(255, 255, 255, 0.6);
    border-radius: 50%;
    opacity: 0;
    transform: translate(-50%, -50%) scale(1);
    transition: transform 0.6s ease-out, opacity 0.6s ease-out;
    z-index: 1;
    will-change: transform, opacity; /* will-changeを追加 */
}

.filter-button:active::after {
    transform: translate(-50%, -50%) scale(20);
    opacity: 1;
    transition: 0s; /* クリック時に即時表示 */
}

.filter-button::before { /* 光沢アニメーション */
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
    transform: skewX(-20deg);
    transition: all 0.5s ease;
    z-index: 1;
    will-change: transform, left;
}

.filter-button:hover::before {
    left: 100%;
}

.filter-button.active {
    background-color: var(--primary-light);
    color: var(--surface-contrast-color);
    box-shadow: 0 5px 15px rgba(0, 191, 255, 0.5); /* アクティブ時の影を強調 */
    border-color: var(--primary-light);
    font-weight: bold;
    background-image: linear-gradient(45deg, rgba(0, 191, 255, 0.8) 0%, rgba(0, 150, 200, 0.8) 100%);
    background-size: 200% 200%;
    animation: activeButtonGlow 4s ease-in-out infinite alternate;
    will-change: background-position, box-shadow; /* will-changeを追加 */
}

.filter-button:hover:not(.active) {
    background-color: #E6EEF4;
    transform: translateY(-5px); /* 浮遊感を強調 */
    box-shadow: 0 6px 18px rgba(0,0,0,0.2);
    border-color: var(--medium-grey);
}

.filter-button.active:hover {
    background-color: #008DCC;
    transform: translateY(-5px);
}

/* IMPROVEMENT 10: インタラクティブな要素のフィードバック強化 (filter-button:active の更新) */
.filter-button:active {
    transform: translateY(3px) scale(0.98);
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2) inset;
}

/* シミュレーションボタン */
.simulation-buttons { /* Container for simulation execution buttons AND share button groups */
    display: flex;
    gap: 15px;
    flex-wrap: wrap;
    justify-content: center;
    margin: 25px 0;
}

.simulation-button { /* This is a base class for simulation and share buttons */
    background-color: var(--primary-light);
    color: var(--surface-contrast-color);
    border: 2px solid var(--primary-light);
    padding: 15px 25px;
    border-radius: 30px;
    cursor: crosshair;
    font-size: 1.1em;
    font-weight: 700;
    transition: all var(--transition-speed);
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    gap: 10px;
    box-shadow: 0 5px 15px rgba(0, 191, 255, 0.3);
    position: relative;
    overflow: hidden;
    will-change: transform, background-color, box-shadow;
}

#simulatePlayerRedeploy, #simulatePartnerRedeploy {
    background-color: var(--accent-orange);
    border-color: var(--accent-orange);
    box-shadow: 0 5px 15px rgba(255, 215, 0, 0.4);
}

#simulatePlayerRedeploy:hover, #simulatePartnerRedeploy:hover {
    background-color: #FFC107;
    border-color: #FFC107;
    transform: translateY(-3px);
    box-shadow: 0 8px 20px rgba(255, 215, 0, 0.6);
}

.simulation-button:active { /* General active state for all sim/share buttons */
    transform: translateY(2px) scale(0.98);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2) inset;
}

.simulation-button::before { /* Gloss effect for all sim/share buttons */
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
    transform: skewX(-20deg);
    transition: all 0.5s ease;
    z-index: 1;
    will-change: transform, left;
}

.simulation-button:hover::before {
    left: 100%;
}

/* シェアボタン */
.share-buttons-group { /* Container for share buttons */
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
    justify-content: center;
    margin-top: 15px;
}

.simulation-results .share-buttons-group {
    margin-top: 20px;
}

.total-hp-display-area .share-buttons-group {
    margin-top: 15px;
}

.share-button#shareRedeployResultBtn,
.share-button#shareTotalHpResultBtn {
    background-color: var(--twitter-blue);
    border-color: var(--twitter-blue);
    box-shadow: 0 5px 15px var(--twitter-blue-shadow);
}

.share-button#shareRedeployResultBtn:hover,
.share-button#shareTotalHpResultBtn:hover {
    background-color: #0D8BD9;
    border-color: #0D8BD9;
    transform: translateY(-3px);
    box-shadow: 0 8px 20px var(--twitter-blue-hover-shadow);
}

.copy-url-button {
    background-color: var(--copy-url-button-bg);
    border-color: var(--copy-url-button-border);
    box-shadow: 0 5px 15px var(--copy-url-button-shadow);
}

.copy-url-button:hover {
    background-color: var(--copy-url-button-hover-bg);
    border-color: var(--copy-url-button-hover-bg);
    transform: translateY(-3px);
    box-shadow: 0 8px 20px var(--copy-url-button-hover-shadow);
}

.copy-url-button:disabled { /* Style for when URL is copied (success feedback) */
    background-color: var(--copy-success-bg);
    border-color: var(--copy-success-border);
    color: var(--surface-contrast-color);
    box-shadow: 0 5px 15px var(--copy-success-shadow);
    cursor: default;
}

.copy-url-button:disabled:hover { /* Keep success style on hover when disabled */
    background-color: var(--copy-success-bg);
    border-color: var(--copy-success-border);
    transform: none;
    box-shadow: 0 5px 15px var(--copy-success-shadow);
}

.simulation-button i { /* General icon style within any .simulation-button (share or primary) */
    font-size: 1.2em;
    transition: transform var(--transition-speed);
    will-change: transform;
}
